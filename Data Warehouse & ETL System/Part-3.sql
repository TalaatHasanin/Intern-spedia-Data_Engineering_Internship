
-- NOTE: THE FOLLOWING CODE STATEMENTS WERE WRITTEN USING THE USER PROJECT MANAGER 

-- ALLOW ROLE DATA ENGINEER TO EXECUTE TASKS FOR THE PART-3
USE ROLE ACCOUNTADMIN;
GRANT EXECUTE TASK ON ACCOUNT TO ROLE DATA_ENGINEER;

-- ALLOW ROLE DATA ENGINEER TO USE TASKS 
GRANT USAGE ON TASKS TO ROLE DATA_ENGINEER;

-- ALLOW ROLE ANALYST TO WRITE ONLY SELECT STATEMENT ON NEW TABLES CREATED BY USER DATA ENGINEER 
GRANT SELECT ON TABLE ENTERPRISE_DB.PROD_ENVR.CUSTOMER_PROD TO ROLE ANALYST;
GRANT SELECT ON TABLE ENTERPRISE_DB.PROD_ENVR.SALES_PROD TO ROLE ANALYST;

-- NOTE: THE FOLLOWING CODE STATEMENTS WERE WRITTEN USING THE USER DATA ENGINEER

-- USE ROLES AND WAREHOUSES ASSIGNED TO USER DATA ENGINEER 
USE ROLE DATA_ENGINEER;
USE WAREHOUSE ADHOC_WH;
USE DATABASE ENTERPRISE_DB;

-- REMOVE NULL VALUES FROM TABLE "CUSTOMER_DETAILS_TABLE" AND TEST QUERY
SELECT * 
FROM CUSTOMER_DETAILS_TABLE
WHERE FIRST_NAME IS NOT NULL AND LAST_NAME IS NOT NULL AND ADDRESS IS NOT NULL AND CITY IS NOT NULL AND COUNTRY IS NOT NULL AND STATE IS NOT NULL AND PHONE_1 IS NOT NULL AND PHONE_2 IS NOT NULL AND EMAIL IS NOT   NULL AND INVOICE_ID IS NOT NULL AND CUSTOMER_TYPE IS NOT NULL AND PRODUCT_LINE IS NOT NULL;

-- REMOVE NULL VALUES FROM TABLE "SALES_DETAILS_TABLE" AND TEST QUERY 
SELECT * 
FROM SALES_DETAILS_TABLE
WHERE ROW_ID IS NOT NULL AND ORDER_ID IS NOT NULL AND ORDER_DATE IS NOT NULL AND SHIP_DATE IS NOT NULL AND SHIP_MODE IS NOT NULL AND CUSTOMER_ID IS NOT NULL AND CUSTOMER_NAME IS NOT NULL AND SEGMENT IS NOT NULL AND COUNTRY IS NOT NULL AND CITY IS NOT NULL AND STATE IS NOT NULL AND POSTAL_CODE IS NOT NULL AND REGION IS NOT NULL AND PRODUCT_ID IS NOT NULL AND CETEGORY IS NOT NULL AND SUB_CATEGORY IS NOT NULL AND PRODUCT_NAME IS NOT NULL AND SALES IS NOT NULL AND QUANTITY IS NOT NULL AND DISCOUNT IS NOT NULL AND PROFIT IS NOT NULL;

-- CREATE NEW TABLES WITH THE SAME STRUCTURE ON "PROD_ENVR" SCHEMA TO ASSIGN TASKS 
USE SCHEMA PROD_ENVR;

CREATE TABLE PROD_ENVR.CUSTOMER_PROD
(
FIRST_NAME VARCHAR(50),
LAST_NAME VARCHAR(50),
ADDRESS VARCHAR(50),
CITY VARCHAR(50),
COUNTRY VARCHAR(50),
STATE VARCHAR(50),
PHONE_1 VARCHAR(50),
PHONE_2 VARCHAR(50),
EMAIL VARCHAR(50),
INVOICE_ID VARCHAR(50),
CUSTOMER_TYPE VARCHAR(50),
PRODUCT_LINE VARCHAR(50),
RATING FLOAT
);

CREATE TABLE PROD_ENVR.SALES_PROD
(
ROW_ID INT,
ORDER_ID VARCHAR(50),
ORDER_DATE DATE,
SHIP_DATE DATE,
SHIP_MODE VARCHAR(50),
CUSTOMER_ID VARCHAR(50),
CUSTOMER_NAME VARCHAR(50),
SEGMENT VARCHAR(50),
COUNTRY VARCHAR(50),
CITY VARCHAR(50),
STATE VARCHAR(50),
POSTAL_CODE BIGINT,
REGION VARCHAR(50),
PRODUCT_ID VARCHAR(50),
CETEGORY VARCHAR(50),
SUB_CATEGORY VARCHAR(50),
PRODUCT_NAME VARCHAR(50),
SALES FLOAT,
QUANTITY INT,
DISCOUNT FLOAT,
PROFIT FLOAT
);

-- CREATE "REFRESH_CUSTOMER_PROD" TASK TO INSERT THE DATA WITHOUT NULLS INTO THE NEW TABLE "CUSTOMER_PROD"
CREATE TASK REFRESH_CUSTOMER_PROD
WAREHOUSE = ADHOC_WH
SCHEDULE = '1 MINUTE'
COMMENT = 'UPDATE CUSTOMER_PROD TABLE WITH THE LATEST DATA'
AS 
INSERT INTO ENTERPRISE_DB.PROD_ENVR.CUSTOMER_PROD
SELECT * 
FROM ENTERPRISE_DB.DEV_ENVR.CUSTOMER_DETAILS_TABLE
WHERE FIRST_NAME IS NOT NULL AND LAST_NAME IS NOT NULL AND ADDRESS IS NOT NULL AND CITY IS NOT NULL AND COUNTRY IS NOT NULL AND STATE IS NOT NULL AND PHONE_1 IS NOT NULL AND PHONE_2 IS NOT NULL AND EMAIL IS NOT   NULL AND INVOICE_ID IS NOT NULL AND CUSTOMER_TYPE IS NOT NULL AND PRODUCT_LINE IS NOT NULL;

-- CREATE "REFRESH_SALES_PROD" TASK TO INSERT THE DATA WITHOUT NULLS INTO THE NEW TABLE "SALES_PROD"
CREATE TASK REFRESH_SALES_PROD
WAREHOUSE = ADHOC_WH
SCHEDULE = '1 MINUTE'
COMMENT = 'UPDATE SALES_PROD TABLE WITH THE LATEST DATA'
AS 
INSERT INTO ENTERPRISE_DB.PROD_ENVR.SALES_PROD
SELECT * 
FROM ENTERPRISE_DB.DEV_ENVR.SALES_DETAILS_TABLE
WHERE ROW_ID IS NOT NULL AND ORDER_ID IS NOT NULL AND ORDER_DATE IS NOT NULL AND SHIP_DATE IS NOT NULL AND   SHIP_MODE IS NOT NULL AND CUSTOMER_ID IS NOT NULL AND CUSTOMER_NAME IS NOT NULL AND SEGMENT IS NOT NULL         AND COUNTRY IS NOT NULL AND CITY IS NOT NULL AND STATE IS NOT NULL AND POSTAL_CODE IS NOT NULL AND           REGION IS NOT NULL AND PRODUCT_ID IS NOT NULL AND CETEGORY IS NOT NULL AND SUB_CATEGORY IS NOT NULL AND         PRODUCT_NAME IS NOT NULL AND SALES IS NOT NULL AND QUANTITY IS NOT NULL AND DISCOUNT IS NOT NULL AND         PROFIT IS NOT NULL;

-- CHECK THE TASKS STATE
DESC TASK REFRESH_CUSTOMER_PROD;
DESC TASK REFRESH_SALES_PROD;

-- ALLOW ROLE DATA ENGINEER TO EXECUTE TASK 
USE ROLE ACCOUNTADMIN;
GRANT EXECUTE TASK ON ACCOUNT TO ROLE DATA_ENGINEER;


-- RESUME THE TASK TO START LOAD THE DATA
USE ROLE DATA_ENGINEER;

-- START CUSTOMER TASK 
ALTER TASK REFRESH_CUSTOMER_PROD RESUME;

-- SHOW STATE OF CUSTOMER TASK
SELECT NAME, STATE,
COMPLETED_TIME, SCHEDULED_TIME,
ERROR_CODE, ERROR_MESSAGE
FROM TABLE(INFORMATION_SCHEMA.TASK_HISTORY())
WHERE NAME = 'REFRESH_CUSTOMER_PROD';

-- STOP CUSTOMER TASK
ALTER TASK REFRESH_CUSTOMER_PROD SUSPEND;
DESC TASK REFRESH_CUSTOMER_PROD;

-- TEST
SELECT * FROM PROD_ENVR.CUSTOMER_PROD;

-----------

-- START SALES TASK 
ALTER TASK REFRESH_SALES_PROD RESUME;

-- SHOW STATE OF SALES TASK
SELECT NAME, STATE,
COMPLETED_TIME, SCHEDULED_TIME,
ERROR_CODE, ERROR_MESSAGE
FROM TABLE(INFORMATION_SCHEMA.TASK_HISTORY())
WHERE NAME = 'REFRESH_SALES_PROD';

-- STOP SALES TASK
ALTER TASK REFRESH_SALES_PROD SUSPEND;
DESC TASK REFRESH_SALES_PROD;

-- TEST
SELECT * FROM SALES_PROD;

----------------------------------------------------

-- NOTE: THE FOLLOWING CODE STATEMENTS WERE WRITTEN USING THE USER ANALYST

-- TEST ROLE ANALYST SELECT STATEMENT  
SELECT * FROM CUSTOMER_PROD;
SELECT * FROM SALES_PROD;






































 

